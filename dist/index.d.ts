import { ISettingsOptional } from './defaultOptions';
export default class NativeScrollAugment {
    scrollToStart: () => void;
    scrollToStartLeft: () => void;
    scrollToStartTop: () => void;
    scrollToEnd: () => void;
    scrollToEndLeft: () => void;
    scrollToEndTop: () => void;
    scrollToPosition: (left: any, top: any) => void;
    scrollByValue: (left: any, top: any) => void;
    private hasTouch;
    private DETECT_EVT;
    private activeId;
    private $parent;
    private scrollsAreas;
    private scrollLeft;
    private scrollTop;
    private lastScrollLeft;
    private lastScrollTop;
    private targetTop;
    private targetLeft;
    private velocityLeft;
    private velocityTop;
    private amplitudeLeft;
    private amplitudeTop;
    private timeStamp;
    private referenceX;
    private referenceY;
    private pressed;
    private autoScrollTracker;
    private isAutoScrolling;
    private resetMomentumTracker;
    private settings;
    constructor(props: {
        parent: HTMLElement;
        scrollsAreas: HTMLElement[];
        options?: ISettingsOptional;
    });
    destroy(): void;
    init(): void;
    private setActiveNode(e);
    private leftVelocityTracker();
    private topVelocityTracker();
    private scrollTo(left, top);
    private onScroll(e);
    private autoScroll();
    private triggerAutoScroll(targetLeft, targetTop, amplitudeLeft, amplitudeTop);
    private cancelAutoScroll();
    private resetMomentum();
    private tap(e);
    private swipe(e);
    private release();
    private scrollGen(start, left, top);
    private scrollToBy(addTo);
}
